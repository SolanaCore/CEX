name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports: [5432:5432]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cex
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports: [6379:6379]
        options: >-
          --health-cmd "redis-cli ping || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      clickhouse:
        image: yandex/clickhouse-server:latest
        ports: [8123:8123, 9000:9000]
        options: >-
          --health-cmd "clickhouse-client --query 'SELECT 1'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/cex
      REDIS_URL: redis://localhost:6379
      CLICKHOUSE_URL: http://localhost:8123

    steps:
      - uses: actions/checkout@v4

      # Cache dependencies
      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      # Install Rust
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      # Build and test each service separately
      - name: Build API
        run: cargo build -p api --release

      - name: Build WebSocket
        run: cargo build -p ws --release

      - name: Build Engine
        run: cargo build -p engine --release

      - name: Build Redis-DB
        run: cargo build -p redis-db --release
      
      - name: Build postgres-db
        run: cargo build -p postgres-db --release
      
      - name: Build Clickhouse-DB
        run: cargo build -p clickhouse-db --release